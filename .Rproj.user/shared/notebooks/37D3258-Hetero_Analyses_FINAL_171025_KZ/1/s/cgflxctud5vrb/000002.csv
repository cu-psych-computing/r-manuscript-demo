"0","```r

promotionranef <- ranef(modindiv1)$id
colnames(promotionranef) <- c(\"intercept_prom\", \"slope_prom\")

promotionranef$id <- as.numeric(row.names(promotionranef))

#Create dataset with one line per person with prom.c score
AggregateProm<- aggregate(cbind(id, prom.c) ~ idcat, data=rndtz, FUN=mean)

#Add prom.c scores to file with valence slopes for prom.c model
promotionranef$prom.c <- AggregateProm$prom.c

rndtz_merged.prom <- merge(rndtz_merged, promotionranef, by = \"id\")


# #I don't understand the third term in the sum
# ranef.prom.pred <- fixef(modindiv1)[2] +
#   ranef(modindiv1)$id[,2] + ranef(modindiv1)$id[,2]^2


# Person-specific implied total valence effects for model controlling for promotion focus
ranef.prom.pred.tot <- fixef(modindiv1)[2] + ranef(modindiv1)$id[,2] +
                   fixef(modindiv1)[4]*promotionranef$prom.c 

#Quantile for same
ranef.prom.pred.tot.quant <- as.vector(quantile(ranef.prom.pred.tot, probs=c(.025, .975)))

# Person-specific residual valence effects for model controlling for promotion focus
ranef.prom.pred.resid <- fixef(modindiv1)[2] + ranef(modindiv1)$id[,2]

#Quantile for same
ranef.prom.pred.resid.quant <- as.vector(quantile(ranef.prom.pred.resid, probs=c(.025, .975)))


pdf(\"valrt_dotplot_promotioncomparison.pdf\", width = 12, height = 5)
par(mfrow=c(2,1), mar = c(4.5, 1, 1, 1)) 
stripchart(ranef.prom.pred.tot, pch=21, bg=\"skyblue\", cex=2.5, lwd=2,
           xlim=c(-.4, .15), xlab=\"\", cex.axis=1.5, cex.lab=1.5)
abline(v=c(ranef.prom.pred.tot.quant[1], mean(ranef.prom.pred.tot), ranef.prom.pred.tot.quant[2]), col = c(\"red\", \"black\", \"red\"), lty = c(\"dashed\", \"solid\", \"dashed\"), lwd = 3)
stripchart(ranef.prom.pred.resid, pch=21, bg=\"skyblue\", cex=2.5, lwd=2,
           xlim=c(-.4, .15), xlab=\"Trait Valence Effect (logRT units)\", cex.axis=1.5, cex.lab=1.5)
abline(v=c(ranef.prom.pred.resid.quant[1], fixef(modindiv1)[2], ranef.prom.pred.resid.quant[2]), col = c(\"red\", \"black\", \"red\"), lty = c(\"dashed\", \"solid\", \"dashed\"), lwd = 3)
dev.off()

#Extra: this scatterplot shows the bivariate relationship between prom.c and the implied total random effects.
par(mfrow=c(1,1))
plot(promotionranef$prom.c, ranef.prom.pred.tot)
abline(lm(ranef.prom.pred.tot ~ promotionranef$prom.c))

```"
