"0","```r

#Put the EBLUPs of the random effects into a separate dataset
cfs1 <- ranef(valrt_intslope)
cfs2 <- as.data.frame(cbind(cfs1$id[,1], cfs1$id[,2]))
cfs2$id <- rbind(201,202,204,205,206,207,208,209,210,212,219,220,221,222,223,224,226,228,229,232,
           234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,254,255,
           256,262,263,264,265,266,267,268,269,270,271,273,274,301,302,303,304,305,306) #Add in id numbers

names(cfs2) <- make.names(names(cfs2))
names(cfs2)[c(2,1)] <- c(\"ebslope\",\"ebintercept\") 


# adding in fixed effects
cfs2$intercept<- summary(valrt_intslope)$coeff[\"(Intercept)\", \"Estimate\"] + cfs2$ebintercept
cfs2$slope<- summary(valrt_intslope)$coeff[\"valenceE\", \"Estimate\"] + cfs2$ebslope

#Merge upper-level variables with the process data frame
rndtz_merged <-merge(rndtz, cfs2, all=TRUE, by=\"id\")

#Create predicted values based on within-subject causal model
rndtz_merged$pred<-rndtz_merged$intercept + rndtz_merged$slope*rndtz_merged$valenceE

#To create graphs based on observed data only: Sort the dataset by slope, ID, and valence
ordrndtz_merged<-rndtz_merged[order(rndtz_merged$slope, rndtz_merged$id, rndtz_merged$valenceE),]

#Sort the upper-level data frame by slope and ID
ordcfs2<-cfs2[order(cfs2$slope, cfs2$id),]


# panel plot sorted by random slope for all IDs
pdf(file=\"valrt_panelplotbyranef_allIDs_171013.pdf\", width=14, height=10)
par(mfrow=c(6,10))
for (i in c(208,222,255,248,267,266,263,212,303,205,220,304,273,226,209,221,246,245,306,254,
            269,234,252,302,256,238,301,202,265,243,241,232,204,305,223,251,268,224,210,264,
            274,236,237,249,235,271,262,228,229,240,201,219,206,244,270,239,207,247)) {  
  plot(rndtz_merged$valenceE[rndtz_merged$id==i], rndtz_merged$logrt[rndtz_merged$id==i], 
       ylab=\"Log RT\", xlab=\"Valence\", type=\"p\", pch=19, xlim=c(-0.8, 0.8), ylim=c(6,8),
       main=paste(round(cfs2$slope[cfs2$id==i], digits=2)))
  lines(ordrndtz_merged$valenceE[ordrndtz_merged$id==i], ordrndtz_merged$pred[ordrndtz_merged$id==i]) 
}
mtext(\"Log RT by Valence, IDs Sorted by Size of Random Slope\", side=3, outer=TRUE, line=-1.2)
dev.off()

# as svg
svg(file=\"valrt_panelplotbyranef_allIDs_171007.svg\", width=14, height=10)
par(mfrow=c(6,10))
for (i in c(208,222,255, 239,207,247)) {  
  plot(rndtz_merged$valenceE[rndtz_merged$id==i], rndtz_merged$logrt[rndtz_merged$id==i], 
       ylab=\"Log RT\", xlab=\"Valence\", type=\"p\", pch=19, xlim=c(-0.8, 0.8), ylim=c(6,8),
       main=paste(round(cfs2$slope[cfs2$id==i], digits=2)))
  lines(ordrndtz_merged$valenceE[ordrndtz_merged$id==i], ordrndtz_merged$pred[ordrndtz_merged$id==i]) 
}
mtext(\"Log RT by Valence, IDs Sorted by Size of Random Slope\", side=3, outer=TRUE, line=-1.2)
dev.off()


# For subset of IDs (with correct color scheme)
pdf(file=\"valrt_panelplotbyranef_subIDs_171013.pdf\", width=7, height=10)
par(mfrow=c(3,3))
for (i in c(208,222,255,243, 241, 232,239,207,247)) {  
  plot(jitter(rndtz_merged$valenceE[rndtz_merged$id==i], .1), rndtz_merged$logrt[rndtz_merged$id==i], 
       ylab=\"Log RT\", col = \"blue\", xlab=\"Valence\", type=\"p\", cex = 1, pch=19, xlim=c(-0.8, 0.8), ylim=c(6,8),xaxt = 'n',
       main=paste(round(cfs2$slope[cfs2$id==i], digits=2)))
    axis(1, at=c(-.5,.5), labels=c(\"Negative\", \"Positive\"))
  lines(ordrndtz_merged$valenceE[ordrndtz_merged$id==i], ordrndtz_merged$pred[ordrndtz_merged$id==i], col = \"red\", lwd = 2) 
}
mtext(\"Log RT by Valence, IDs Sorted by Size of Random Slope\n\", side=3, outer=TRUE, line=-1.2)
dev.off()

```"
